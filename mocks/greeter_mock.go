// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"sync"
)

// GreeterMock is a mock implementation of main.Greeter.
//
//	func TestSomethingThatUsesGreeter(t *testing.T) {
//
//		// make and configure a mocked main.Greeter
//		mockedGreeter := &GreeterMock{
//			GreetFunc: func(s string) string {
//				panic("mock out the Greet method")
//			},
//		}
//
//		// use mockedGreeter in code that requires main.Greeter
//		// and then make assertions.
//
//	}
type GreeterMock struct {
	// GreetFunc mocks the Greet method.
	GreetFunc func(s string) string

	// calls tracks calls to the methods.
	calls struct {
		// Greet holds details about calls to the Greet method.
		Greet []struct {
			// S is the s argument value.
			S string
		}
	}
	lockGreet sync.RWMutex
}

// Greet calls GreetFunc.
func (mock *GreeterMock) Greet(s string) string {
	callInfo := struct {
		S string
	}{
		S: s,
	}
	mock.lockGreet.Lock()
	mock.calls.Greet = append(mock.calls.Greet, callInfo)
	mock.lockGreet.Unlock()
	if mock.GreetFunc == nil {
		var (
			sOut string
		)
		return sOut
	}
	return mock.GreetFunc(s)
}

// GreetCalls gets all the calls that were made to Greet.
// Check the length with:
//
//	len(mockedGreeter.GreetCalls())
func (mock *GreeterMock) GreetCalls() []struct {
	S string
} {
	var calls []struct {
		S string
	}
	mock.lockGreet.RLock()
	calls = mock.calls.Greet
	mock.lockGreet.RUnlock()
	return calls
}
